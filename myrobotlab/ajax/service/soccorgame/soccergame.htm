<html>
<head>
<title>ROBOFUTBOL</title>
<link rel="stylesheet" type="text/css" href="style.css" />
<!-- video begin -->
		<script type="text/javascript" src="assets/swfobject.js"></script> 
		<script type="text/javascript"> 
		swfobject.embedSWF("simpleSubscriber.swf", "myContent", "400", "400", "8.0.0", "assets/expressInstall.swf");
		</script> 
<!-- video end -->

<script type="text/javascript">
/*
	TODO:
		GET or POST
			//mrl.open("POST", "test.json");
			//mrl.setRequestHeader('Content-Type', 'application/json');
			//mrl.send(JSON.stringify(msg));

		variable parameter function

	References :
	http://www.tizag.com/ajaxTutorial/ajax-mysql-database.php
	http://stackoverflow.com/questions/5083332/get-query-string-value-with-jquery-ajax-in-asp-net-mvc
	http://stackoverflow.com/questions/1959040/is-it-possible-to-send-a-variable-number-of-arguments-to-a-javascript-function
    http://www.javascripttoolbox.com/bestpractices/
    info on how to stream over AJAX - versus the readyState==4 - completed data
    http://stackoverflow.com/questions/6558129/process-a-continuous-stream-of-json
    http://stackoverflow.com/questions/195951/change-an-elements-css-class-with-javascript

*/

var mrl; // the XMLHTTPRequest object
var msg; // last Message from MRL
var token; // authentication token
var debug = true;
var context = 'login'; // current context / form

function Message()
{
	this.msgID=null;
	this.timeStamp=null;
	this.name=null;
	this.sender=null;
	this.sendingMethod=null;
	this.historyList=null;
	this.status=null;
	this.msgType=null;
	this.method=null;
	this.data=null;
}


function getMsg()
{
    // set up asynch ajax
	if (window.XMLHttpRequest)
	{
		// code for IE7+, Firefox, Chrome, Opera, Safari
		mrl=new XMLHttpRequest();
	} else {
		// code for IE6, IE5
		mrl=new ActiveXObject("Microsoft.XMLHTTP");
	}

	// Return asynchronous msgs from MRL
	mrl.onreadystatechange = function() {
	    if (mrl.readyState == 4 && mrl.status == 200) {

	        // for security all messages are wrapped in
	        // another security envelope
	        msg = JSON.parse(mrl.responseText);
	        // param 0 = token
	        // param 1 - inifinity = message array
	        token = msg.data[0];

			addDebugMsg(msg, "<-");
			
	        // check for authenticated
	        // demux message array
	        for (var i = 1; i < msg.data.length; ++i) {
	            var subMsg = msg.data[i];
	            if (debug) { // FIXME - put in function msg to table row
	            	addDebugMsg(subMsg, "<-");
	            }

	            // array message dispatcher
	            var invoke = subMsg.method + "(msg.data[" + i + "]);"
	            //alert(invoke);
	            eval(invoke);
	        }
	    }
	}
}



function setv(name, value) {
    document.getElementById(name).innerHTML = value;
}

function error (msg)
{
    // param 0 = error message
    setv("status", "<span class='error'>" + msg.data[0] + "</span>");
}

function authenticated(msg) {
    // param 0 = token
    setv("status", "<span style='background-color:green'>" + msg.data[0] + "</span>");
    token = msg.data[0];
}

function init ()
{
    getMsg();
    setKeyHandlers();
    show('login');
    document.login.loginName.focus();
    
}
function setKeyHandlers() {

    if (document.addEventListener) {
        document.addEventListener("keydown", keydown, false);
        document.addEventListener("keypress", keypress, false);
        document.addEventListener("keyup", keyup, false);
        document.addEventListener("textInput", textinput, false);
    }
    else if (document.attachEvent) {
        document.attachEvent("onkeydown", keydown);
        document.attachEvent("onkeypress", keypress);
        document.attachEvent("onkeyup", keyup);
        document.attachEvent("ontextInput", textinput);
    }
    else {
        document.onkeydown = keydown;
        document.onkeypress = keypress;
        document.onkeyup = keyup;
        document.ontextinput = textinput;   // probably doesn't work
    }
}

function keydown(e) {
    if (!e) e = event;
    //alert('keydown ' + e);
}
function keypress(e) {
    if (!e) e = event;
    //alert('keypress ' + e.keyCode);
    if (context == 'login')
    {
		if (e.keyCode == 13)
		{
			sendMessage(formToMsg(document.login));
		}
    }
}
function keyup(e) {
    if (!e) e = event;
    //alert('keyup ' + e);
}
function textinput(e) {
    if (!e) e = event;
    //alert('textinput ' + e);
}


// ----------------------  form processing -----------------------
function formToMsg(theForm)
{
	var msg = new Message();
	
	msg.name = theForm.name.value; // FIXME - are we loosing the form name?
	msg.method = theForm.method.value;
	msg.sender="chrome";
	msg.sendingMethod = "myMethond";

	if (theForm.elements.length > 2)
	{
		msg.data = new Array()
		for(i=2; i< theForm.elements.length; i++)
		{
			//alert(i + ' ' + theForm.elements[i].value);
			msg.data[i-2] = theForm.elements[i].value;
		}
	}
	
	return msg;
}

function sendMessage(msg)
{
	if (debug)
	{
		addDebugMsg(msg, "->");
	}
	
	var queryString = "?msg=" + JSON.stringify(msg);

	//TODO - necessary or only on init???
	mrl.open("GET","test.json" + queryString ,true);
	mrl.send();
}

// ----------------- view related --------------------
// non msg based
function addDebugMsg (msg, dir)
{
	var table = document.getElementById("debugTable");
    var row = table.insertRow(table.rows.length);
    if (table.rows.length % 2 == 0) {
        row.className = "oddRow";
    }
    var cell0 = row.insertCell(0);
    var cell1 = row.insertCell(1);
    var cell2 = row.insertCell(2);
    var cell3 = row.insertCell(3);
    var cell4 = row.insertCell(4);
    cell0.innerHTML = table.rows.length-1;
    cell1.innerHTML = dir;
    cell2.innerHTML = msg.name;
    cell3.innerHTML = msg.method;
    if (msg.method == 'msg')
    {
        // security container msg
        cell4.innerHTML = msg.data[0];
    } else {
    	cell4.innerHTML = msg.data;
    }
}
// TODO - remove
function addMsg(tableName, msg) {
    var table = document.getElementById(tableName);
    var row = table.insertRow(table.rows.length);
    var cell0 = row.insertCell(0);
    var cell1 = row.insertCell(1);
    var cell2 = row.insertCell(2);
    var cell3 = row.insertCell(3);
    cell0.innerHTML = table.rows.length-1;
    cell1.innerHTML = msg.name;
    cell2.innerHTML = msg.method;
    cell3.innerHTML = msg.data;
}

function addClass(name, className) {
    document.getElementById(name).className += " " + className;
}

function removeClass(name, className) {
    var reg = new RegExp('(\\s|^)' + className + '(\\s|$)');
    document.getElementById(name).className =
    document.getElementById(name).className.replace(reg, '');    
}

function hide(name) {
    addClass(name, "hide");
}

function show(name) {
    removeClass(name, "hide");
}
//msg base view control methods
function setContext(contextMsg)
{
	// param 0 - context
	context = contextMsg.data[0];
	if (context == 'login')
	{
		hide('select.players');
		show('login')
	} else if (context == 'select.players') 
	{
		show('select.players');
		hide('login')
	} else {
		alert('unknown context ' + context);
	}
}

</script>
</head>
<body onload="init();">
<div align="center">

<!-- ================ status begin	================== -->
<table id="statusTable" class="debug">
	<thead>
		<tr>
			<td width="100%"><span id="status"></span></td>			
		</tr>
	</thead>
</table>
<!-- ================ status end	================== -->

<!-- ================ debug begin	================== -->
<table  id="debugTable" class="debug">
	<thead>
		<tr>
			<td>#</td>
			<td>&lt;-&gt;</td>
			<td>name</td>
			<td>method</td>
			<td>data</td>
		</tr>
	</thead>
</table>
<!-- ================ debug end================== -->

<!-- ================ login begin================== TODO - FIGURE THIS MESS OUT !!! NAME ???? NAME VS ID IN JAVASCRIPT -->
<form name="login" id="login" method="get" action="test.json">
<input name="name" id="name" type="hidden" value="soccer" />
<input name="method" id="method" type="hidden" value="login" />
<table border="0">
	<tr>
		<td colspan="2" align="center">
		<h2>ROBOFUTBOL<br>
		<img border="0" src="images/soccerball.png" width="300" height="300"></h2>
		</td>
	</tr>
	<tr>
		<td width="152" align="right">login</td>
		<td width="224"><input type="text" id="loginName" name="loginName" size="20"></td>
	</tr>
	<tr>
		<td width="152" align="right">password</td>
		<td width="224"><input type="password" name="password" size="20"></td>
	</tr>
	<tr>
		<td width="152"></td>
		<td width="224">powered by ï¿½Bipedino MyRobotLab</td>
	</tr>
</table>
</form>

<!-- ================ login end================== -->

<!-- ================ select.players begin================== -->
<form id="select.players" action="" class="hide">
<table id="video">
<tr>
	<td>
	<div id="myContent"> 
			<h1>You need the Adobe Flash Player for this demo, download it by clicking the image below.</h1> 
			<p><a href="http://www.adobe.com/go/getflashplayer"><img src="http://www.adobe.com/images/shared/download_buttons/get_flash_player.gif" alt="Get Adobe Flash player" /></a></p> 
		</div> 
		</td>
		</tr>
</table>
<table id="select.players.table">
	<tr>
		<td colspan="2" align="center">ROBOFUTBOL<br />
		game : World Championship<br />
		time left : 14:31
		<table border="0">
			<tr>
				<td width="50%" colspan="3">Dragon Team</td>
				<td colspan="3">UberBots</td>
			</tr>
			<tr>
				<td width="13%"><input type="radio" value="V1" name="R1" /></td>
				<td width="12%">Bot#1</td>
				<td width="25%">&lt;available&gt;</td>
				<td><input type="radio" value="V4" name="R4" disabled checked /></td>
				<td>Bot#4</td>
				<td>Ro-Bot-X</td>
			</tr>
			<tr>
				<td width="13%"><input type="radio" value="V2" name="R2"
					disabled checked></td>
				<td width="12%">Bot#2</td>
				<td width="25%">TinHead</td>
				<td><input type="radio" value="V5" name="R5" disabled checked /></td>
				<td>Bot#5</td>
				<td>GroG</td>
			</tr>
			<tr>
				<td width="13%"><input type="radio" value="V3" disabled
					name="R3" disabled checked></td>
				<td width="12%">Bot#3</td>
				<td width="25%">Adam</td>
				<td><input type="radio" value="V6" name="R6" /></td>
				<td>Bot#6</td>
				<td>&lt;available&gt;</td>
			</tr>
			<tr>
				<td width="50%" colspan="3">&nbsp;</td>
				<td colspan="3">&nbsp;</td>
			</tr>
			<tr>
				<td width="50%" colspan="3">&nbsp;</td>
				<td colspan="3">&nbsp;</td>
			</tr>
		</table>
		</td>
	</tr>
	<tr>
		<td>&nbsp;</td>
		<td>Powered by ï¿½Bipedino &amp; MyRobotLab</td>
	</tr>
</table>
</form>
<!-- ================ select.players end================== --> 

</div>

</body>
</html>
